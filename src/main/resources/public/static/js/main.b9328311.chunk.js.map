{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","response","json","data","fetchMatches","title","value","teamMatches","totalWins","color","slice","map","id","process","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9328311.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './MatchDetailCard.scss';\r\n\r\nexport const MatchDetailCard = ({teamName,match}) => {\r\n  if(!match) return null;\r\n  const otherTeam = teamName === match.team1 ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`\r\n  const isMatchWon = teamName === match.matchWinner;\r\n  return (\r\n    <div className= {isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n      <div>\r\n        <span className=\"vs\">vs</span>\r\n        <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n        <h2 className=\"match-date\">{match.date}</h2>\r\n        <h3 className=\"match-venue\">at {match.venue}</h3>\r\n        <h4 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h4>\r\n      </div>\r\n      <div className=\"additional-detail\">\r\n        <h3>First Innings</h3>\r\n        <p>{match.team1}</p>\r\n        <h3>Second Innings</h3>\r\n        <p>{match.team2}</p>\r\n        <h3>Man of the Match</h3>\r\n        <p>{match.playerOfMatch}</p>\r\n        <h3>Umpires</h3>\r\n        <p>{match.umpire1},{match.umpire2}</p>\r\n      </div>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport './matchSmallCard.scss'\r\nexport const MatchSmallCard = ({teamName,match}) => {\r\n  if(!match) return null;\r\n\r\n  const otherTeam = teamName === match.team1 ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.matchWinner;\r\n\r\n  return (\r\n   <div className= {isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n     <span className=\"vs\">vs</span>\r\n      <h3><Link to={otherTeamRoute}>{otherTeam}</Link></h3>\r\n      <p className='match-result'>{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { React,useEffect,useState } from 'react';\r\nimport {Link, useParams} from 'react-router-dom'\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\nimport './TeamPage.scss';\r\n\r\nexport const TeamPage = () => {\r\n\r\n  const [team , setTeam] = useState({matches:[]});\r\n  const {teamName} = useParams();\r\n  useEffect(\r\n    ()=>{\r\n      const fetchMatches = async () =>{\r\n          const response = await fetch(`http://localhost:8080/team/${teamName}`);\r\n          const data = await response.json();\r\n          setTeam(data);\r\n\r\n      }\r\n      fetchMatches();\r\n    },[teamName]\r\n  );\r\n\r\nif(!team || !team.teamName){\r\n  return <h1>Team Not Found</h1>\r\n}\r\n\r\n  return (\r\n    <div className=\"TeamPage\">\r\n      <div className='team-name-section'>\r\n      <h1>{team.teamName}</h1>\r\n      </div>\r\n      <div className='win-loss-section'>\r\n        Win/Losses\r\n        <PieChart\r\n          data={[\r\n            { title: 'Losses', value: team.teamMatches-team.totalWins, color: '#a34d5d' },\r\n            { title: 'wins', value: team.totalWins, color: '#4da375' },\r\n          ]}\r\n        />\r\n      </div>\r\n      <div className='match-detail-section'>\r\n      <h3>Latest Matches</h3>\r\n      <MatchDetailCard teamName={team.teamName} match={team.matches[0]} />\r\n      </div>\r\n      {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} match={match} teamName={team.teamName} />)}\r\n      <div className='more-link'>\r\n        <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More</Link>\r\n      </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './YearSelector.scss'\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i= startYear; i<=endYear;i++){\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n        <ol className='YearSelector'>\r\n        {years.map(year => (\r\n                <li key={year} >\r\n                    <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n                </li> )\r\n            )}\r\n        </ol>\r\n    )\r\n}","import { React,useEffect,useState } from 'react';\r\nimport {useParams} from 'react-router-dom'\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { YearSelector } from '../components/YearSelector';\r\nimport './MatchPage.scss';\r\nexport const MatchPage = () => {\r\n\r\n    const [matches , setMatches] = useState([]);\r\n    const {teamName,year} = useParams();\r\n    useEffect(\r\n        () =>{\r\n            const fetchMatches = async ()=>{\r\n                const response  = await fetch(`http://localhost:8080/team/${teamName}/matches?year=${year}`);\r\n                const data = await response.json();\r\n                setMatches(data);\r\n            }\r\n            fetchMatches();\r\n        },[teamName,year]\r\n    );\r\n\r\n  return (\r\n    <div className=\"MatchPage\">\r\n      <div className=\"year-selector\">\r\n        <h3>Select Year</h3>\r\n        <YearSelector teamName={teamName} />\r\n      </div>\r\n    <div>\r\n    <h1 className='page-heading'>{teamName} matches in {year}</h1> \r\n     {\r\n        matches.map(match => <MatchDetailCard key={match.id} teamName ={teamName} match={match} />)\r\n     }\r\n     </div>\r\n   </div>\r\n  );\r\n}\r\n\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport './TeamTile.scss'\r\n\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n  \r\n  return (\r\n   <div className=\"TeamTile\">\r\n      <h3>\r\n          <Link to={`teams/${teamName}`}>\r\n              {teamName}\r\n          </Link>\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import { React,useEffect,useState } from 'react';\r\nimport { TeamTile } from '../components/TeamTile';\r\nimport './HomePage.scss';\r\n\r\nexport const HomePage = () => {\r\n\r\n  const [teams , setTeams] = useState([]);\r\n  useEffect(\r\n    ()=>{\r\n      const fetchAllTeams = async () =>{\r\n          const response = await fetch(`http://localhost:8080/team`);\r\n          const data = await response.json();\r\n          setTeams(data);\r\n\r\n      }\r\n      fetchAllTeams();\r\n    },[]\r\n  );\r\n\r\n  return (\r\n    <div className=\"HomePage\">\r\n      <div className='header-section'>\r\n            <h1 className='app-name'>IPL-Dashboard</h1>\r\n      </div>\r\n      <div className='team-grid'>\r\n        {teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\r\n      </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n","import './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n            <Route path='/teams/:teamName/matches/:year'>\n              <MatchPage />\n            </Route>\n            <Route path='/teams/:teamName'>\n              <TeamPage />\n            </Route>\n            <Route path='/'>\n              <HomePage />\n            </Route>\n        </Switch>\n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}